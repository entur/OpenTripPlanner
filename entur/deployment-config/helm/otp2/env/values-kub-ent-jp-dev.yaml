default_replicas: 2

horizontalPodAutoscaler:
  enabled: true
  maxReplicas: 10
  minReplicas: 2
  targetCPUUtilizationPercentage: 80

rollingUpdate:
  maxSurge: 50%
  maxUnavailable: 1

resources:
  cpuLimit: "8"
  memLimit: 20000Mi
  cpuRequest: "2"
  memRequest: 18000Mi
  xmx: 13g
  xms: 13g

maxConcurrentRoutingRequests: 2

environmentValues:
  mardukGcpBaseName: "gs://ror-otp-graphs-gcp2-dev/"

configmapMounts:
  - name: config-volume
    mountPath: /code/otpdata/norway/router-config.json
    subPath: router-config.json
    configMap: otp-router-config
    readOnly: true

ingress:
  enabled: true
  otpApi:
    domainName: -gcp2.dev.entur.io
  otpDebug:
    domainName: .dev.entur.org

cronjobRedeployOtp2:
  environmentValues:
    cloudsdkCoreProject: kub-ent-jp-dev

proxy:
  enabled: true
  exposed: true
  googlePubsubProjectId: ent-otp2-dev
  googlePubsubRequestTopic: ror.otp2.outbound.bigdaddy
  googlePubsubResponseTopic: ror.otp2.outbound.bigdaddy.tripresponse

# Realtime-updaters use internal service instead of external (Apigee) to avoid inexplicable timeouts
configuration:
  apiProcessingTimeout: "7s"
  flexRouting: true
  floatingBike: true
  sorlandsbanen: true
  optimizeTransfers: true
  parallelRouting: false
  restApiConfigJsonParam: true
  siriETUpdater: http://anshar.dev.entur.internal/anshar/services
  siriETPubsubUpdater:
    enabled: true
    topicProjectName: ent-anshar-dev
    subscriptionProjectName: ent-otp2-dev
    pubsubTopicName: xml.estimated_timetables
    dataInitializationUrl: http://realtime-cache.dev.entur.internal/et
    producerMetrics: true
  siriSXUpdater: http://realtime-cache.dev.entur.internal/sx
  transferConstraints: true
  vehicleRentalServiceDirectory:
    url: "http://mobility-cache.dev.entur.internal/gbfs-internal"
    sourcesName: "systems"
    updaterUrlName: "url"
    updaterNetworkName: "id"
    enableGeofencingZones: true
