{{- if .Values.nordicJourneyPlanner.enabled }}
apiVersion: v1
data:
  router-config.json: |+
      {
        "configVersion" : "{{ .Values.build.number }}",
        "server": {
          "apiProcessingTimeout" : "60s"
        },
        "routingDefaults": {
          "streetRoutingTimeout": "5s",
          "numItineraries": 12,
          "transferPenalty": 0,
          "turnReluctance": 1.0,
          "elevatorBoardTime": 90,
          "elevatorBoardCost": 90,
          "elevatorHopTime": 20,
          "elevatorHopCost": 20,
          "bicycle" : {
            "speed" : 5,
            "reluctance" : 5.0,
            "boardCost" : 600,
            "walk" : {
              "reluctance" : 10.0
            },
            "parking" : {
              "cost" : 120
            }
          },
          "car" : {
            "reluctance" : 10,
            "decelerationSpeed" : 2.9,
            "accelerationSpeed" : 2.9,
            "rental" : {
              "dropOffTime" : "120s"
            }
          },
          "walk" : {
            "speed" : 1.3,
            "reluctance" : 4.0,
            "stairsReluctance" : 1.65,
            "boardCost" : 600
          },
          "otherThanPreferredRoutesPenalty": 300,
          "transferSlack": 120,
          // Default slack for any mode is 0 (zero)
          "boardSlackForMode": {
            "AIRPLANE" : "35m"
          },
          "alightSlackForMode": {
            "AIRPLANE" : "15m"
          },
          "transitReluctanceForMode" : {
            "RAIL" : 0.85
          },
          "accessEgress": {
            "maxDurationForMode" : {
              "BIKE_RENTAL": "20m",
              "SCOOTER_RENTAL" : "20m"
            }      
          },
          "maxDirectStreetDurationForMode": {
            "CAR": "12h"
          },
          "itineraryFilters" : {
            "transitGeneralizedCostLimit" : {
              "costLimitFunction": "900 + 1.5x",
              "intervalRelaxFactor": 0.75
            },
            "bikeRentalDistanceRatio": 0.3
          },
          "ignoreRealtimeUpdates": false,
          "geoidElevation": false,
          "maxJourneyDuration": "P2DT12H",
          "drivingDirection": "right",
          "transferOptimization": {
            "optimizeTransferWaitTime": true,
            "minSafeWaitTimeFactor": 5.0,
            "backTravelWaitTimeFactor": 1.0,
            "extraStopBoardAlightCostsFactor": 8.0
          }
        },
        "transit": {
          "maxNumberOfTransfers" : 12,
          "dynamicSearchWindow" : {
            "minTransitTimeCoefficient" : 0.5,
            "minWaitTimeCoefficient" : 0.5,
            "minWindow" : "1h",
            "maxWindow" : "5h"
          },
          "stopBoardAlightDuringTransferCost" : {
            "DISCOURAGED" : 1500,
            "ALLOWED" : 75,
            "RECOMMENDED" : 30,
            "PREFERRED" : 0
          }
        },
        "flex": {
          "maxTransferDuration" : "5m",
          "maxFlexTripDuration" : "1h15m"
        },
        "transmodelApi": {
          "hideFeedId" : true
        },
        "timetableUpdates": {
          "purgeExpiredData": true
        },
        "updaters": [
            // SIRI SX service alerts
            {
              "type": "siri-sx-updater",
              "frequency": "1m",
              "url": "{{ .Values.configuration.siriSXUpdater }}",
              "timeout": "20s",
              "feedId": "EN",
              "blockReadinessUntilInitialized": true,
              "headers" : {
               "ET-Client-Name": "${HOSTNAME}-SX"
              }
            },
    {{- if .Values.configuration.siriETPubsubUpdater.enabled }}
            // SIRI ET Google Pubsub updater
            {
              "type": "siri-et-google-pubsub-updater",
              "feedId": "EN",
              "reconnectPeriod": "5s",
              "initialGetDataTimeout": "1m20s",
              "projectName": "{{ .Values.configuration.siriETPubsubUpdater.topicProjectName }}",
              "topicProjectName": "{{ .Values.configuration.siriETPubsubUpdater.topicProjectName }}",
              "subscriptionProjectName": "{{ .Values.configuration.siriETPubsubUpdater.subscriptionProjectName }}",
              "topicName": "{{ .Values.configuration.siriETPubsubUpdater.pubsubTopicName }}",
              "dataInitializationUrl": "{{ .Values.configuration.siriETPubsubUpdater.dataInitializationUrl }}"
            }
    {{- else -}}
            // SIRI ET updater
            {
              "type": "siri-et-updater",
              "frequency": "20s",
              "previewInterval": "3h",
              "timeout": "20s",
              "url": "{{ .Values.configuration.siriETUpdater }}",
              "feedId": "EN",
              "blockReadinessUntilInitialized": true
            },
            {
              "type": "siri-et-updater",
              "frequency": "20s",
              "previewInterval": "3h",
              "timeout": "10s",
              "url": "{{ .Values.configuration.siriETUpdaterVar }}",
              "feedId": "EN",
              "blockReadinessUntilInitialized": true
            }
     {{- end }}
        ]
      }
kind: ConfigMap
metadata:
  name: otp2nordic-router-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.nordic.labels" . | indent 4 }}
{{- end }}
